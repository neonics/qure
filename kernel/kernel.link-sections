/* Script for ld -r: link without relocation */

/* http://sourceware.org/binutils/docs/ld/Builtin-Functions.html#Builtin-Functions */

OUTPUT_FORMAT(pe-i386)
SEARCH_DIR("/usr/i686-cygwin/lib"); SEARCH_DIR("/usr/lib"); SEARCH_DIR("/usr/lib/w32api");
SECTIONS
{
/*  --image-base 0x...
*/

	/* Realmode Kernel */
	.text16 . :
	{
	KERNEL_START = . ;
	kernel_start = . ;
		KERNEL_CODE16_START = . ;
		*(.text16)
		KERNEL_CODE16_END = . ;
		KERNEL_CODE16_SIZE = ABSOLUTE( KERNEL_CODE16_END - KERNEL_CODE16_START );
	}

	.data16 :
	{
		KERNEL_DATA16_START = . ;
		*(.data16)
		KERNEL_DATA16_END = .;
		REALMODE_KERNEL_END = .;
	}

	/* PMode kernel */
	.text :
	{
		KERNEL_CODE32_START = . ;
		*(.text)
		KERNEL_CODE32_END = . ;
		KERNEL_CODE32_SIZE = ABSOLUTE( KERNEL_CODE32_END - KERNEL_CODE32_START );
	}

	.data :
	{
		KERNEL_DATA_START = . ;
		*(.data)
	}

	.strings :
	{
		*(.strings)
		data_ring2_strings_end = .;
	}

	.classdef :
	{
		data_classes_start = .;
		data_classdef_start = .;
		*(.classdef)
		data_classdef_end = .;
	/*	*(SORT(.classdef$*))*/
		*(.classdef$md)
		*(.classdef$mo)
		*(.classdef$ms)
		*(.classdef$*)
		data_classes_end = .;
	}

	.kapi :
	{
		data_kapi_start = .;
		_KAPI_COUNTER = 0;

		*(.kapi$idx)
			_KAPI_IDX_SIZE = ABSOLUTE( . - data_kapi_start);
			KAPI_NUM_METHODS = ABSOLUTE(_KAPI_IDX_SIZE / 4);
		*(.kapi$ptr)
		*(.kapi$str)
		*(.kapi$arg)
		data_kapi_end = .;
	}


	.kernel_callgate :
	{
		/* -- Kernel Callgate */
		data_kernel_callgate_start = .;
		*(.kernel_callgate)
		data_kernel_callgate_end   = .;
		KERNEL_CALLGATE_NUM_CALLS = ABSOLUTE( (data_kernel_callgate_end - data_kernel_callgate_start)/4 );
	}

	.nethandler :
	{
		data_nethandler_start = .;
		*(.nethandler)	/* in case kernel.link-sections */
		data_nethandler_ports = .;
		*(.nethandler$ports)
		data_nethandler_names = .;
		*(.nethandler$names)
		data_nethandler_end = .;
		NETHANDLER_COUNT = ABSOLUTE( (data_nethandler_end - data_nethandler_start) / (2+4+4) );
	}


	.shellcmd :
	{
		*(.shellcmd)
	}



	KERNEL_DATA_END = . ;
	KERNEL_DATA_SIZE = ABSOLUTE(KERNEL_DATA_END - KERNEL_DATA_START);

	/* Signature */

	.sig :
	{
		kernel_signature = . ;
		LONG(0x1337c0de);
	}

	kernel_end = .;
	KERNEL_SIZE = ABSOLUTE( kernel_end - kernel_start );

	KERNEL_END = .;

  /*
  .data  :
  {
    *(.data)
    *(.data2)
    *(.jcr)
  }
  */


  .rdata  :
  {
    *(.rdata)
    *(.rdata_runtime_pseudo_reloc)
  }
  .eh_frame  :
  {
    *(.eh_frame*)
  }
  .pdata  :
  {
    *(.pdata)
  }
  .edata  :
  {
    *(.edata)
  }
  /*
  /DISCARD/ :
  {
    *(.debug$S)
    *(.debug$T)
    *(.debug$F)
    *(.drectve)
    	*(.strtab)
  }
  */
  .idata  :
  {
  }
  .tls  :
  {
  }
  .rsrc  :
  {
    *(.rsrc)
  }
  .reloc  :
  {
    *(.reloc)
  }
  .stab   :
  {
    *(.stab)
  }
  .stabstr   :
  {
    *(.stabstr)
  }
}
